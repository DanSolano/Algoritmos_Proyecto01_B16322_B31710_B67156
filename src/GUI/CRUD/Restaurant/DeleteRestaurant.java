/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.CRUD.Restaurant;

import ADT.LinkedList.DoubleLinkedCircularList;
import Domain.Products;
import Domain.Restaurant;
import Domain.Restaurant;
import GUI.AdminModule;
import Main.Algoritmos_Proyecto01_B16322_B31710_B67156;
import Utilities.StringPath;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.io.File;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author daniel
 */
public class DeleteRestaurant extends javax.swing.JFrame {

    private ArrayList<Restaurant> restaurants;

    private TextAutoCompleter textAutocompleter;
    private int indexUser;
    private Restaurant restaurantSearch;
    private ArrayList<Products> allProducts;

    /**
     * Creates new form CreateRestaurant
     */
    public DeleteRestaurant() {
        initComponents();
        this.indexUser = -1;
        this.restaurants = Algoritmos_Proyecto01_B16322_B31710_B67156.RESTAURANT_LIST;
        this.allProducts = Algoritmos_Proyecto01_B16322_B31710_B67156.ALL_PRODUCTS_LIST;
        jbDelete.setEnabled(false);
        autoCompleter();

//        textAutocompleter = new TextAutoCompleter(jtfMail);
//        uploadSearchByMail();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jtfUser = new javax.swing.JTextField();
        jbDelete = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jlInformation = new javax.swing.JLabel();
        jbSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Eliminar Restaurante");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setText("ID Restaurante");

        jtfUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfUserKeyReleased(evt);
            }
        });

        jbDelete.setText("Eliminar");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jlInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlInformation.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbSearch.setText("Buscar");
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jtfUser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jbDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jlInformation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jbSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbDelete)
                .addGap(82, 82, 82)
                .addComponent(jbSearch)
                .addGap(46, 46, 46))
            .addComponent(jlInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jtfUser, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSearch)
                    .addComponent(jButton2)
                    .addComponent(jbDelete))
                .addGap(18, 18, 18)
                .addComponent(jlInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        back();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        textAutocompleter.removeItemByValue(jtfUser.getText().trim());
        delete();

    }//GEN-LAST:event_jbDeleteActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        back();
    }//GEN-LAST:event_formWindowClosing

    private void jtfUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfUserKeyReleased
        searchUser();
    }//GEN-LAST:event_jtfUserKeyReleased

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        searchUser();
    }//GEN-LAST:event_jbSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbSearch;
    private javax.swing.JLabel jlInformation;
    private javax.swing.JTextField jtfUser;
    // End of variables declaration//GEN-END:variables

    /**
     * isMail evaluate if the String is an email.
     *
     * @param email email received the string input the text field for email
     * @return true if the String is a email and false if the String is not an
     * email
     */
    private void back() {
        Algoritmos_Proyecto01_B16322_B31710_B67156.RESTAURANT_LIST = this.restaurants;
        Algoritmos_Proyecto01_B16322_B31710_B67156.ALL_PRODUCTS_LIST = this.allProducts;

        this.dispose();
        AdminModule adminModule = new AdminModule();
        adminModule.setVisible(true);
    }

    private void uploadSearchByUser() {
        ArrayList<Restaurant> restaurants = this.restaurants;
        for (int i = 0; i < restaurants.size(); i++) {
            textAutocompleter.addItem(restaurants.get(i).getId());
        }
    }

    private void searchUser() {
        String id = jtfUser.getText().trim();
        int counter = -1;
        for (Restaurant restaurant : restaurants) {
            counter++;

            if (restaurant.getId().equals(id)) {
                this.restaurantSearch = restaurant;
                this.indexUser = counter;
                jlInformation.setText("Nombre: " + restaurant.getName() + "- Ubicacion: " + restaurant.getLocation() + "- Provinvia: " + restaurant.getProvince());
                jbDelete.setEnabled(true);
            }
        }

    }

    private void clearFields() {
        jtfUser.setText("");
        jlInformation.setText("Restaurante Eliminado");
    }

    private void delete() {
        this.restaurants.remove(this.indexUser);
        if (!this.restaurants.contains(this.restaurantSearch)) {

            File folder = new File(StringPath.PATH_REST_PHOTO + restaurantSearch.getName() + restaurantSearch.getId() + "/");
            System.out.println(folder);//StringPath.PATH_REST_PHOTO + restaurantSearch.getName() + restaurantSearch.getId());

            functionDeleteFolder(new File(StringPath.PATH_REST_PHOTO + restaurantSearch.getName() + restaurantSearch.getId()));

            jbDelete.setEnabled(false);
            clearFields();
            deleteMenuRestaurant(this.restaurantSearch);
            jlInformation.setText("El restaurante fue eliminado exitosamente");
        }
    }

    private void functionDeleteFolder(File folderToDelete) {
        if (!folderToDelete.exists()) {
            return;
        }

        if (folderToDelete.isDirectory()) {
            for (File f : folderToDelete.listFiles()) {
                functionDeleteFolder(f);
            }
        }
        folderToDelete.delete();
    }

    private void autoCompleter() {
        textAutocompleter = new TextAutoCompleter(jtfUser);
        textAutocompleter.setCaseSensitive(false);
        textAutocompleter.setMode(0);//para que el autocompletar busque el fragmento escrito este contenido en alguna parte de la busqueda
        uploadSearchByUser();
    }

    private void deleteMenuRestaurant(Restaurant restaurantSearch) {

        for (Products aProduct : this.allProducts) {
            if (aProduct.getIdRestaurant().equals(restaurantSearch.getId())) {
                this.allProducts.remove(aProduct);

            }//if
        }//for
    }

}
